:Compile exe="232_unit_test"
  g++ -std=c++20 -Wall -Wextra ${CPP} -o ${EXE}

:Header    // Code to include at the beginning of all tests.
  #include <iostream>
  #include "testing.hpp"

  double SquareRoot(double x) { return x / 2.0; }

:Output detail="student"
:Output filename="results.html", detail="student"
:Output filename="private/teacher-only.html", detail="teacher"
:Output filename="grade.txt", detail="percent"

// See README.md for formatting information and options
:TestCase run_main=false, name="Simple Tests", points=10.0  // A 10-point test case.  All code is used until next : line.
  size_t x = 5;
  size_t y = 8;
  CHECK(x + 2 < y+1, "This is an error message.");

  std::string str = "Test string.";
  std::string error_middle = " multi-segment";
  CHECK(str == "Test string.", "This is an error message for a", error_middle, " string test.");
  CHECK(str == "Test string2.", "This is an error message for a string test that should fail.");

:TestCase run_main=false, name="Hidden Tests", points=40.0, hidden=true
  CHECK(SquareRoot(4.0) == 2.0);
  CHECK(SquareRoot(16.0) == 4.0);
  CHECK(SquareRoot(1000000.0) == 1000.0, "Fails when tested on large values.");
  CHECK(SquareRoot(0.0) == 0.0, "Fails when tested on ZERO.");

:TestCase run_main=false, name="Free Points", points=50.0
  CHECK( 2+2 == 4);
  CHECK( true );
  CHECK( "abc" == "abc");

:TestCase run_main=false, name="NOT-Hidden This time", points=5.0
  CHECK(SquareRoot(4.0) == 2.0);
  CHECK(SquareRoot(16.0) == 4.0);
  CHECK(SquareRoot(1000000.0) == 1000.0, "Fails when tested on large values.");
  CHECK(SquareRoot(0.0) == 0.0, "Fails when tested on ZERO.");

:TestCase run_main=true, name="Basic IO test", points=10
